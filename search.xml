<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CS193p_assignment2</title>
    <url>/2022/01/20/cs193p-ls/</url>
    <content><![CDATA[<p>​    一个历时很久的blog，学完Lesson4之后，自己码的Assignment2的代码，也不知道对不对（毕竟没有参考代码），仅供参考啊</p>
<h3 id="Task1-amp-2-省略"><a href="#Task1-amp-2-省略" class="headerlink" title="Task1&amp;2: 省略"></a>Task1&amp;2: 省略</h3><h3 id="Task3：将主题添加到模型中，包括主题的名称、一组表情符号、要展示的卡片对数和适当的背景颜色"><a href="#Task3：将主题添加到模型中，包括主题的名称、一组表情符号、要展示的卡片对数和适当的背景颜色" class="headerlink" title="Task3：将主题添加到模型中，包括主题的名称、一组表情符号、要展示的卡片对数和适当的背景颜色"></a>Task3：将主题添加到模型中，包括主题的名称、一组表情符号、要展示的卡片对数和适当的背景颜色</h3><p>创建一个结构体存储主题</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Theme</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> emojis: [<span class="type">String</span>]</span><br><span class="line">    <span class="keyword">var</span> numberOfPairsOfCards: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> color: <span class="type">String</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="Task4-amp-8：在游戏中至少有一个主题展示的卡片数少于总数，支持六种主题"><a href="#Task4-amp-8：在游戏中至少有一个主题展示的卡片数少于总数，支持六种主题" class="headerlink" title="Task4&amp;8：在游戏中至少有一个主题展示的卡片数少于总数，支持六种主题"></a>Task4&amp;8：在游戏中至少有一个主题展示的卡片数少于总数，支持六种主题</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private(set)</span> <span class="keyword">var</span> themes: [<span class="type">Theme</span>] <span class="operator">=</span> [</span><br><span class="line">    <span class="type">Theme</span>(</span><br><span class="line">        name: <span class="string">&quot;Veiche&quot;</span>,</span><br><span class="line">        emojis: [<span class="string">&quot;🚌&quot;</span>,<span class="string">&quot;🚗&quot;</span>,<span class="string">&quot;🚓&quot;</span>,<span class="string">&quot;🚑&quot;</span>,<span class="string">&quot;🛻&quot;</span>,<span class="string">&quot;🏎&quot;</span>,<span class="string">&quot;🚲&quot;</span>,<span class="string">&quot;🚂&quot;</span>,<span class="string">&quot;✈️&quot;</span>,<span class="string">&quot;🚀&quot;</span>,<span class="string">&quot;🛶&quot;</span>,<span class="string">&quot;🛸&quot;</span>,<span class="string">&quot;🚕&quot;</span>,<span class="string">&quot;🚙&quot;</span>,<span class="string">&quot;🚎&quot;</span>,<span class="string">&quot;🚛&quot;</span>,<span class="string">&quot;🚁&quot;</span>,<span class="string">&quot;🏍&quot;</span>,<span class="string">&quot;🦽&quot;</span>,<span class="string">&quot;🚒&quot;</span>,<span class="string">&quot;🚜&quot;</span>,<span class="string">&quot;🚠&quot;</span>,<span class="string">&quot;🚄&quot;</span>,<span class="string">&quot;🛰&quot;</span>],</span><br><span class="line">        numberOfPairsOfCards: <span class="number">8</span>,</span><br><span class="line">        color: <span class="string">&quot;red&quot;</span>),</span><br><span class="line">    <span class="type">Theme</span>(</span><br><span class="line">        name: <span class="string">&quot;Animal&quot;</span>,</span><br><span class="line">        emojis: [<span class="string">&quot;🐶&quot;</span>,<span class="string">&quot;🐱&quot;</span>,<span class="string">&quot;🐭&quot;</span>,<span class="string">&quot;🐰&quot;</span>,<span class="string">&quot;🦊&quot;</span>,<span class="string">&quot;🐻&quot;</span>,<span class="string">&quot;🐼&quot;</span>,<span class="string">&quot;🐮&quot;</span>,<span class="string">&quot;🐵&quot;</span>,<span class="string">&quot;🐧&quot;</span>,<span class="string">&quot;🦋&quot;</span>,<span class="string">&quot;🐢&quot;</span>,<span class="string">&quot;🐝&quot;</span>,<span class="string">&quot;🦆&quot;</span>,<span class="string">&quot;🐙&quot;</span>,<span class="string">&quot;🦐&quot;</span>,<span class="string">&quot;🦀&quot;</span>],</span><br><span class="line">        numberOfPairsOfCards: <span class="number">6</span>,</span><br><span class="line">        color: <span class="string">&quot;blue&quot;</span>),</span><br><span class="line">    <span class="type">Theme</span>(name: <span class="string">&quot;Face&quot;</span>,</span><br><span class="line">           emojis: [<span class="string">&quot;😀&quot;</span>,<span class="string">&quot;☺️&quot;</span>,<span class="string">&quot;😊&quot;</span>,<span class="string">&quot;😇&quot;</span>,<span class="string">&quot;🥰&quot;</span>,<span class="string">&quot;😌&quot;</span>,<span class="string">&quot;😉&quot;</span>,<span class="string">&quot;🙃&quot;</span>,<span class="string">&quot;😋&quot;</span>,<span class="string">&quot;🤨&quot;</span>,<span class="string">&quot;😏&quot;</span>,<span class="string">&quot;😒&quot;</span>,<span class="string">&quot;😭&quot;</span>,<span class="string">&quot;🥵&quot;</span>,<span class="string">&quot;😳&quot;</span>,<span class="string">&quot;🤔&quot;</span>,<span class="string">&quot;🤗&quot;</span>,<span class="string">&quot;😷&quot;</span>],</span><br><span class="line">           numberOfPairsOfCards: <span class="number">7</span>,</span><br><span class="line">           color: <span class="string">&quot;green&quot;</span>),</span><br><span class="line">	<span class="comment">//添加6种</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> emojis <span class="operator">=</span> theme.emojis.shuffled()</span><br></pre></td></tr></table></figure>
<h3 id="Task5-amp-6-amp-7：不存在永远不会出现的卡片，不允许出现两对相同符号的卡片-主题中指定显示的卡片数量超过卡用的数量，自动减少显示的卡片数量"><a href="#Task5-amp-6-amp-7：不存在永远不会出现的卡片，不允许出现两对相同符号的卡片-主题中指定显示的卡片数量超过卡用的数量，自动减少显示的卡片数量" class="headerlink" title="Task5&amp;6&amp;7：不存在永远不会出现的卡片，不允许出现两对相同符号的卡片 主题中指定显示的卡片数量超过卡用的数量，自动减少显示的卡片数量"></a>Task5&amp;6&amp;7：不存在永远不会出现的卡片，不允许出现两对相同符号的卡片 主题中指定显示的卡片数量超过卡用的数量，自动减少显示的卡片数量</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pairs <span class="operator">=</span> emojis.count</span><br><span class="line">       <span class="keyword">if</span> pairs <span class="operator">&gt;</span> theme.numberOfPairsOfCards &#123;</span><br><span class="line">           pairs <span class="operator">=</span> theme.numberOfPairsOfCards</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//model的数据类型是model结构</span></span><br><span class="line">       <span class="keyword">return</span> <span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt;(numberOfPairsOfCards: pairs) &#123; pairIndex <span class="keyword">in</span></span><br><span class="line">           emojis[pairIndex]</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Task9：新主题能通过代码被添加到游戏中"><a href="#Task9：新主题能通过代码被添加到游戏中" class="headerlink" title="Task9：新主题能通过代码被添加到游戏中"></a>Task9：新主题能通过代码被添加到游戏中</h3><h3 id="Task10-amp-11：在UI中添加”New-Game”按钮，开始新的游戏，开始游戏应重新选择主题"><a href="#Task10-amp-11：在UI中添加”New-Game”按钮，开始新的游戏，开始游戏应重新选择主题" class="headerlink" title="Task10&amp;11：在UI中添加”New Game”按钮，开始新的游戏，开始游戏应重新选择主题"></a>Task10&amp;11：在UI中添加”New Game”按钮，开始新的游戏，开始游戏应重新选择主题</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Button</span> &#123;</span><br><span class="line">    viewModel.newGame()</span><br><span class="line">&#125; label: &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;New Game&quot;</span>)</span><br><span class="line">        .font(.largeTitle)</span><br><span class="line">        .foregroundColor(<span class="type">Color</span>.red)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">init</span>(<span class="params">startTheme</span>: <span class="type">Theme</span>? <span class="operator">=</span> <span class="literal">nil</span>)</span> &#123;</span><br><span class="line">	theme <span class="operator">=</span> themes.randomElement()<span class="operator">!</span></span><br><span class="line">	cardcolor <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.color(theme: theme)</span><br><span class="line">	model <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.createMemoryGame(theme: theme)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newGame</span>()</span> &#123;</span><br><span class="line">	theme <span class="operator">=</span> themes.randomElement()<span class="operator">!</span></span><br><span class="line">	cardcolor <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.color(theme: theme)</span><br><span class="line">	model <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.createMemoryGame(theme: theme)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Task12-amp-13：游戏中卡片正面朝下-新游戏卡片被打乱"><a href="#Task12-amp-13：游戏中卡片正面朝下-新游戏卡片被打乱" class="headerlink" title="Task12&amp;13：游戏中卡片正面朝下,新游戏卡片被打乱"></a>Task12&amp;13：游戏中卡片正面朝下,新游戏卡片被打乱</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">init</span>(<span class="params">numberOfPairsOfCards</span>: <span class="type">Int</span>, <span class="params">creatCardContent</span>: (<span class="type">Int</span>) -&gt; <span class="type">CardContent</span>)</span> &#123;</span><br><span class="line">    cards <span class="operator">=</span> <span class="type">Array</span>&lt;<span class="type">Card</span>&gt;()</span><br><span class="line">    <span class="comment">//添加两倍的卡牌</span></span><br><span class="line">    <span class="keyword">for</span> pairIndex <span class="keyword">in</span> <span class="number">0</span><span class="operator">..&lt;</span>numberOfPairsOfCards &#123;</span><br><span class="line">        <span class="keyword">let</span> content <span class="operator">=</span> creatCardContent(pairIndex)</span><br><span class="line">        cards.append(<span class="type">Card</span>(content: content, id: pairIndex<span class="operator">*</span><span class="number">2</span>))</span><br><span class="line">        cards.append(<span class="type">Card</span>(content: content, id: pairIndex<span class="operator">*</span><span class="number">2</span><span class="operator">+</span><span class="number">1</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    cards.shuffle()</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Card</span>: <span class="title">Identifiable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isFaceUp: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">var</span> isMatched: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">var</span> content: <span class="type">CardContent</span></span><br><span class="line">    <span class="keyword">var</span> id: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> seen: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Task14-amp-16：在UI中显示主题的名称和分数"><a href="#Task14-amp-16：在UI中显示主题的名称和分数" class="headerlink" title="Task14&amp;16：在UI中显示主题的名称和分数"></a>Task14&amp;16：在UI中显示主题的名称和分数</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">HStack</span> &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Theme:  <span class="subst">\(viewModel.theme.name)</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="type">Spacer</span>()</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Score:    <span class="subst">\(viewModel.score)</span>&quot;</span>)</span><br><span class="line">&#125;.foregroundColor(.red)</span><br></pre></td></tr></table></figure>
<h3 id="Task15：匹配成功分数-2，匹配不成功且每含有一张被看见过的牌分数-2"><a href="#Task15：匹配成功分数-2，匹配不成功且每含有一张被看见过的牌分数-2" class="headerlink" title="Task15：匹配成功分数+2，匹配不成功且每含有一张被看见过的牌分数-2"></a>Task15：匹配成功分数+2，匹配不成功且每含有一张被看见过的牌分数-2</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mutating</span> <span class="function"><span class="keyword">func</span> <span class="title">choose</span>(<span class="keyword">_</span> <span class="params">card</span>: <span class="type">Card</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> chosenIndex <span class="operator">=</span> cards.firstIndex(where: &#123; <span class="variable">$0</span>.id <span class="operator">==</span> card.id &#125;),</span><br><span class="line">       <span class="operator">!</span>cards[chosenIndex].isFaceUp,</span><br><span class="line">       <span class="operator">!</span>cards[chosenIndex].isMatched</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> potentialMatchIndex <span class="operator">=</span> indexOfTheOneAndOnlyFaceUpCard &#123; <span class="comment">//如果有纸牌被掀开</span></span><br><span class="line">            <span class="keyword">if</span> cards[chosenIndex].content <span class="operator">==</span> cards[potentialMatchIndex].content &#123; <span class="comment">//能匹配</span></span><br><span class="line">                cards[chosenIndex].isMatched <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                cards[potentialMatchIndex].isMatched <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                score <span class="operator">+=</span> <span class="number">2</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> cards[potentialMatchIndex].seen &#123;</span><br><span class="line">                    score <span class="operator">-=</span> <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> cards[chosenIndex].seen &#123;</span><br><span class="line">                    score <span class="operator">-=</span> <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">                cards[potentialMatchIndex].seen <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                cards[chosenIndex].seen <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            indexOfTheOneAndOnlyFaceUpCard <span class="operator">=</span> <span class="literal">nil</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> index <span class="keyword">in</span> cards.indices &#123;</span><br><span class="line">                cards[index].isFaceUp <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            indexOfTheOneAndOnlyFaceUpCard <span class="operator">=</span> chosenIndex</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        cards[chosenIndex].isFaceUp.toggle()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h3><p>ContentView.swift</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ObservedObject</span> <span class="keyword">var</span> viewModel: <span class="type">EmojiMemoryGame</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">ScrollView</span> &#123;</span><br><span class="line">            <span class="type">Button</span> &#123;</span><br><span class="line">                viewModel.newGame()</span><br><span class="line">            &#125; label: &#123;</span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;New Game&quot;</span>)</span><br><span class="line">                    .font(.largeTitle)</span><br><span class="line">                    .foregroundColor(<span class="type">Color</span>.red)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">HStack</span> &#123;</span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;Theme:  <span class="subst">\(viewModel.theme.name)</span>&quot;</span>)</span><br><span class="line">                    </span><br><span class="line">                <span class="type">Spacer</span>()</span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;Score:    <span class="subst">\(viewModel.score)</span>&quot;</span>)</span><br><span class="line">            &#125;.foregroundColor(.red)</span><br><span class="line">            </span><br><span class="line">            <span class="type">LazyVGrid</span>(columns: [<span class="type">GridItem</span>(.adaptive(minimum: <span class="number">75</span>))]) &#123;</span><br><span class="line">                <span class="type">ForEach</span>(viewModel.cards) &#123; card <span class="keyword">in</span></span><br><span class="line">                    <span class="type">CardView</span>(card: card)</span><br><span class="line">                        .aspectRatio(<span class="number">2</span><span class="operator">/</span><span class="number">3</span>, contentMode: .fit)</span><br><span class="line">                        .onTapGesture&#123;</span><br><span class="line">                            viewModel.choose(card)</span><br><span class="line">                        &#125;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .foregroundColor(viewModel.cardcolor)</span><br><span class="line">        .padding(.horizontal)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CardView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> card: <span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt;.<span class="type">Card</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">ZStack</span>&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> shape <span class="operator">=</span> <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">20</span>)</span><br><span class="line">            <span class="keyword">if</span> card.isFaceUp &#123;</span><br><span class="line">                shape.fill().foregroundColor(.white)</span><br><span class="line">                shape.strokeBorder(lineWidth: <span class="number">3</span>)</span><br><span class="line">                <span class="type">Text</span>(card.content).font(.largeTitle)</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> card.isMatched &#123;</span><br><span class="line">                shape.opacity(<span class="number">0</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                shape.fill()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView_Previews</span>: <span class="title">PreviewProvider</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> previews: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> game <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>()</span><br><span class="line">        <span class="type">Group</span> &#123;</span><br><span class="line">            <span class="type">ContentView</span>(viewModel: game)</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>EmojiMemoryGame.swift</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmojiMemoryGame</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">createMemoryGame</span>(<span class="params">theme</span>: <span class="type">Theme</span>)</span> -&gt; <span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt; &#123; <span class="comment">//添加参数</span></span><br><span class="line">        <span class="keyword">let</span> emojis <span class="operator">=</span> theme.emojis.shuffled()</span><br><span class="line">        <span class="keyword">var</span> pairs <span class="operator">=</span> emojis.count</span><br><span class="line">        <span class="keyword">if</span> pairs <span class="operator">&gt;</span> theme.numberOfPairsOfCards &#123;</span><br><span class="line">            pairs <span class="operator">=</span> theme.numberOfPairsOfCards</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//model的数据类型是model结构</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt;(numberOfPairsOfCards: pairs) &#123; pairIndex <span class="keyword">in</span></span><br><span class="line">            emojis[pairIndex]</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Published</span> <span class="keyword">private</span> <span class="keyword">var</span> model: <span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt;<span class="comment">//初始化或静态访问静态不需要全名</span></span><br><span class="line">    <span class="meta">@Published</span> <span class="keyword">private(set)</span> <span class="keyword">var</span> cardcolor: <span class="type">Color</span></span><br><span class="line">    <span class="keyword">private(set)</span> <span class="keyword">var</span> theme: <span class="type">Theme</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">init</span>(<span class="params">startTheme</span>: <span class="type">Theme</span>? <span class="operator">=</span> <span class="literal">nil</span>)</span> &#123;</span><br><span class="line">        theme <span class="operator">=</span> themes.randomElement()<span class="operator">!</span></span><br><span class="line">        cardcolor <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.color(theme: theme)</span><br><span class="line">        model <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.createMemoryGame(theme: theme)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回view model 变量类型是数组&lt;model中的Card&gt;结构</span></span><br><span class="line">    <span class="keyword">var</span> cards: <span class="type">Array</span>&lt;<span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt;.<span class="type">Card</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> model.cards<span class="comment">//返回model中的cards数组 数组的结构是Card</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">color</span>(<span class="params">theme</span>: <span class="type">Theme</span>)</span> -&gt; <span class="type">Color</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;red&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.red</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;green&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.green</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;yellow&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.yellow</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;blue&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.blue</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;purple&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.purple</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;pink&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.pink</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;gray&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.gray</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> theme.color <span class="operator">==</span> <span class="string">&quot;orange&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.orange</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">Color</span>.gray</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> score: <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> model.score</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// MARK: - Intent(s)</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">choose</span>(<span class="keyword">_</span> <span class="params">card</span>: <span class="type">MemoryGame</span>&lt;<span class="type">String</span>&gt;.<span class="type">Card</span>)</span> &#123;</span><br><span class="line">        model.choose(card)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">newGame</span>()</span> &#123;</span><br><span class="line">        theme <span class="operator">=</span> themes.randomElement()<span class="operator">!</span></span><br><span class="line">        cardcolor <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.color(theme: theme)</span><br><span class="line">        model <span class="operator">=</span> <span class="type">EmojiMemoryGame</span>.createMemoryGame(theme: theme)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>MemoryGame.swift</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MemoryGame</span>&lt;<span class="title">CardContent</span>&gt; <span class="title">where</span> <span class="title">CardContent</span>: <span class="title">Equatable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private(set)</span> <span class="keyword">var</span> cards: <span class="type">Array</span>&lt;<span class="type">Card</span>&gt;</span><br><span class="line">    <span class="keyword">private(set)</span> <span class="keyword">var</span> score: <span class="type">Int</span> <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> indexOfTheOneAndOnlyFaceUpCard: <span class="type">Int</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">mutating</span> <span class="function"><span class="keyword">func</span> <span class="title">choose</span>(<span class="keyword">_</span> <span class="params">card</span>: <span class="type">Card</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> chosenIndex <span class="operator">=</span> cards.firstIndex(where: &#123; <span class="variable">$0</span>.id <span class="operator">==</span> card.id &#125;),</span><br><span class="line">           <span class="operator">!</span>cards[chosenIndex].isFaceUp,</span><br><span class="line">           <span class="operator">!</span>cards[chosenIndex].isMatched</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> potentialMatchIndex <span class="operator">=</span> indexOfTheOneAndOnlyFaceUpCard &#123; <span class="comment">//如果有纸牌被掀开</span></span><br><span class="line">                <span class="keyword">if</span> cards[chosenIndex].content <span class="operator">==</span> cards[potentialMatchIndex].content &#123; <span class="comment">//能匹配</span></span><br><span class="line">                    cards[chosenIndex].isMatched <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                    cards[potentialMatchIndex].isMatched <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                    score <span class="operator">+=</span> <span class="number">2</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> cards[potentialMatchIndex].seen &#123;</span><br><span class="line">                        score <span class="operator">-=</span> <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> cards[chosenIndex].seen &#123;</span><br><span class="line">                        score <span class="operator">-=</span> <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    cards[potentialMatchIndex].seen <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                    cards[chosenIndex].seen <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                indexOfTheOneAndOnlyFaceUpCard <span class="operator">=</span> <span class="literal">nil</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> index <span class="keyword">in</span> cards.indices &#123;</span><br><span class="line">                    cards[index].isFaceUp <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                indexOfTheOneAndOnlyFaceUpCard <span class="operator">=</span> chosenIndex</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            cards[chosenIndex].isFaceUp.toggle()</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">init</span>(<span class="params">numberOfPairsOfCards</span>: <span class="type">Int</span>, <span class="params">creatCardContent</span>: (<span class="type">Int</span>) -&gt; <span class="type">CardContent</span>)</span> &#123;</span><br><span class="line">        cards <span class="operator">=</span> <span class="type">Array</span>&lt;<span class="type">Card</span>&gt;()</span><br><span class="line">        <span class="comment">//添加两倍的卡牌</span></span><br><span class="line">        <span class="keyword">for</span> pairIndex <span class="keyword">in</span> <span class="number">0</span><span class="operator">..&lt;</span>numberOfPairsOfCards &#123;</span><br><span class="line">            <span class="keyword">let</span> content <span class="operator">=</span> creatCardContent(pairIndex)</span><br><span class="line">            cards.append(<span class="type">Card</span>(content: content, id: pairIndex<span class="operator">*</span><span class="number">2</span>))</span><br><span class="line">            cards.append(<span class="type">Card</span>(content: content, id: pairIndex<span class="operator">*</span><span class="number">2</span><span class="operator">+</span><span class="number">1</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        cards.shuffle()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Card</span>: <span class="title">Identifiable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> isFaceUp: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">var</span> isMatched: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">var</span> content: <span class="type">CardContent</span></span><br><span class="line">        <span class="keyword">var</span> id: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">var</span> seen: <span class="type">Bool</span> <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Theme.swift</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Theme</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> emojis: [<span class="type">String</span>]</span><br><span class="line">    <span class="keyword">var</span> numberOfPairsOfCards: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> color: <span class="type">String</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private(set)</span> <span class="keyword">var</span> themes: [<span class="type">Theme</span>] <span class="operator">=</span> [</span><br><span class="line">    <span class="type">Theme</span>(</span><br><span class="line">        name: <span class="string">&quot;Veiche&quot;</span>,</span><br><span class="line">        emojis: [<span class="string">&quot;🚌&quot;</span>,<span class="string">&quot;🚗&quot;</span>,<span class="string">&quot;🚓&quot;</span>,<span class="string">&quot;🚑&quot;</span>,<span class="string">&quot;🛻&quot;</span>,<span class="string">&quot;🏎&quot;</span>,<span class="string">&quot;🚲&quot;</span>,<span class="string">&quot;🚂&quot;</span>,<span class="string">&quot;✈️&quot;</span>,<span class="string">&quot;🚀&quot;</span>,<span class="string">&quot;🛶&quot;</span>,<span class="string">&quot;🛸&quot;</span>,<span class="string">&quot;🚕&quot;</span>,<span class="string">&quot;🚙&quot;</span>,<span class="string">&quot;🚎&quot;</span>,<span class="string">&quot;🚛&quot;</span>,<span class="string">&quot;🚁&quot;</span>,<span class="string">&quot;🏍&quot;</span>,<span class="string">&quot;🦽&quot;</span>,<span class="string">&quot;🚒&quot;</span>,<span class="string">&quot;🚜&quot;</span>,<span class="string">&quot;🚠&quot;</span>,<span class="string">&quot;🚄&quot;</span>,<span class="string">&quot;🛰&quot;</span>],</span><br><span class="line">        numberOfPairsOfCards: <span class="number">8</span>,</span><br><span class="line">        color: <span class="string">&quot;red&quot;</span>),</span><br><span class="line">    <span class="type">Theme</span>(</span><br><span class="line">        name: <span class="string">&quot;Animal&quot;</span>,</span><br><span class="line">        emojis: [<span class="string">&quot;🐶&quot;</span>,<span class="string">&quot;🐱&quot;</span>,<span class="string">&quot;🐭&quot;</span>,<span class="string">&quot;🐰&quot;</span>,<span class="string">&quot;🦊&quot;</span>,<span class="string">&quot;🐻&quot;</span>,<span class="string">&quot;🐼&quot;</span>,<span class="string">&quot;🐮&quot;</span>,<span class="string">&quot;🐵&quot;</span>,<span class="string">&quot;🐧&quot;</span>,<span class="string">&quot;🦋&quot;</span>,<span class="string">&quot;🐢&quot;</span>,<span class="string">&quot;🐝&quot;</span>,<span class="string">&quot;🦆&quot;</span>,<span class="string">&quot;🐙&quot;</span>,<span class="string">&quot;🦐&quot;</span>,<span class="string">&quot;🦀&quot;</span>],</span><br><span class="line">        numberOfPairsOfCards: <span class="number">6</span>,</span><br><span class="line">        color: <span class="string">&quot;blue&quot;</span>),</span><br><span class="line">    <span class="type">Theme</span>(name: <span class="string">&quot;Face&quot;</span>,</span><br><span class="line">           emojis: [<span class="string">&quot;😀&quot;</span>,<span class="string">&quot;☺️&quot;</span>,<span class="string">&quot;😊&quot;</span>,<span class="string">&quot;😇&quot;</span>,<span class="string">&quot;🥰&quot;</span>,<span class="string">&quot;😌&quot;</span>,<span class="string">&quot;😉&quot;</span>,<span class="string">&quot;🙃&quot;</span>,<span class="string">&quot;😋&quot;</span>,<span class="string">&quot;🤨&quot;</span>,<span class="string">&quot;😏&quot;</span>,<span class="string">&quot;😒&quot;</span>,<span class="string">&quot;😭&quot;</span>,<span class="string">&quot;🥵&quot;</span>,<span class="string">&quot;😳&quot;</span>,<span class="string">&quot;🤔&quot;</span>,<span class="string">&quot;🤗&quot;</span>,<span class="string">&quot;😷&quot;</span>],</span><br><span class="line">           numberOfPairsOfCards: <span class="number">7</span>,</span><br><span class="line">           color: <span class="string">&quot;green&quot;</span>),</span><br><span class="line">    <span class="type">Theme</span>(name: <span class="string">&quot;Hallowmans&quot;</span>,</span><br><span class="line">           emojis: [<span class="string">&quot;👻&quot;</span>,<span class="string">&quot;🎃&quot;</span>,<span class="string">&quot;😈&quot;</span>,<span class="string">&quot;🍬&quot;</span>,<span class="string">&quot;🕷&quot;</span>],</span><br><span class="line">           numberOfPairsOfCards: <span class="number">8</span>,</span><br><span class="line">           color: <span class="string">&quot;orange&quot;</span>),</span><br><span class="line">    <span class="type">Theme</span>(name: <span class="string">&quot;Foot&quot;</span>,</span><br><span class="line">           emojis: [<span class="string">&quot;🎂&quot;</span>,<span class="string">&quot;🍡&quot;</span>,<span class="string">&quot;🍱&quot;</span>,<span class="string">&quot;🍛&quot;</span>,<span class="string">&quot;🍝&quot;</span>,<span class="string">&quot;🌯&quot;</span>,<span class="string">&quot;🍕&quot;</span>,<span class="string">&quot;🍟&quot;</span>,<span class="string">&quot;🍔&quot;</span>,<span class="string">&quot;🌭&quot;</span>,<span class="string">&quot;🍗&quot;</span>,<span class="string">&quot;🥗&quot;</span>,<span class="string">&quot;🍲&quot;</span>,<span class="string">&quot;🍤&quot;</span>,<span class="string">&quot;🥮&quot;</span>,<span class="string">&quot;🥧&quot;</span>,<span class="string">&quot;🍩&quot;</span>,<span class="string">&quot;🍪&quot;</span>,<span class="string">&quot;🍵&quot;</span>,<span class="string">&quot;🍞&quot;</span>,<span class="string">&quot;🥐&quot;</span>,<span class="string">&quot;🥖&quot;</span>,<span class="string">&quot;🥞&quot;</span>,<span class="string">&quot;🫕&quot;</span>],</span><br><span class="line">           numberOfPairsOfCards: <span class="number">8</span>,</span><br><span class="line">           color: <span class="string">&quot;purple&quot;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>参考代码：<a href="https://github.com/sk-ruban/CS193p">https://github.com/sk-ruban/CS193p</a></p>
]]></content>
      <categories>
        <category>IOS</category>
      </categories>
      <tags>
        <tag>swift</tag>
        <tag>cs193p</tag>
      </tags>
  </entry>
  <entry>
    <title>cs193p_note5 Properties Layout @ViewBuilder</title>
    <url>/2022/01/25/cs193p-note5/</url>
    <content><![CDATA[<h2 id="Computed-Properties-计算属性"><a href="#Computed-Properties-计算属性" class="headerlink" title="Computed Properties 计算属性"></a>Computed Properties 计算属性</h2><p>不提供存储值，提供读取器和设置器，接收和设置其他属性</p>
<p>get用来接收数据，并且返回值，set用来设置其他属性或值</p>
<h2 id="State"><a href="#State" class="headerlink" title="@State"></a>@State</h2><p>变化会在必要时重新绘制，相当于@ObservedObject</p>
<span id="more"></span>

<h2 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h2><h3 id="HStack-amp-VStack"><a href="#HStack-amp-VStack" class="headerlink" title="HStack &amp; VStack"></a>HStack &amp; VStack</h3><p>从最不灵活的视图先分配，text如果空间不够会自动省略</p>
<p><code>Spacer()</code>非常灵活</p>
<p><code>Divide()</code> 画一条线分割视图</p>
<p><code>.layoutPriority()</code> 先获得视图的分配，alig对齐</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">VStack</span>(alignment: .leading) &#123; <span class="operator">...</span> &#125; <span class="comment">//.leading .trailing</span></span><br><span class="line"><span class="type">VStack</span>(alignment: .firstTextBaseline) &#123;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="LazyHStack-amp-LazyVStack"><a href="#LazyHStack-amp-LazyVStack" class="headerlink" title="LazyHStack &amp; LazyVStack"></a>LazyHStack &amp; LazyVStack</h3><p>不构建不在屏幕上显示的视图，只构建ScrollView中显示在屏幕上的，不灵活</p>
<h3 id="ScrollView"><a href="#ScrollView" class="headerlink" title="ScrollView"></a>ScrollView</h3><p>接收任何视图在其中滚动</p>
<h3 id="LazyHGrid-amp-LazyVGrid"><a href="#LazyHGrid-amp-LazyVGrid" class="headerlink" title="LazyHGrid &amp; LazyVGrid"></a>LazyHGrid &amp; LazyVGrid</h3><p>控制多少列或者多少行</p>
<h3 id="ZStack"><a href="#ZStack" class="headerlink" title="ZStack"></a>ZStack</h3><p>调整自己的大小合适子项</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Text</span>(<span class="string">&quot;hello&quot;</span>).background(<span class="type">Rectangle</span>().foregroundColor(.red))</span><br><span class="line"><span class="comment">//背景大小取决于文字</span></span><br><span class="line"><span class="type">Circle</span>().overlay(<span class="type">Text</span>(<span class="string">&quot;hello&quot;</span>), alignment: .center)</span><br><span class="line"><span class="comment">//文字不重要，很灵活</span></span><br></pre></td></tr></table></figure>

<h3 id="GeometryReader"><a href="#GeometryReader" class="headerlink" title="GeometryReader"></a>GeometryReader</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Geometryreader</span>&#123; geometry <span class="keyword">in</span> </span><br><span class="line">		<span class="operator">...</span></span><br><span class="line">&#125;<span class="comment">//放在视图里 计算视图大小</span></span><br><span class="line"><span class="type">ZStack</span> &#123;&#125;.edgesIgnoringSafeArea([.top]) <span class="comment">//画入安全区域</span></span><br></pre></td></tr></table></figure>

<h2 id="ViewBuilder"><a href="#ViewBuilder" class="headerlink" title="@ViewBuilder"></a>@ViewBuilder</h2><p>将函数返回成很对个视图组成的一个视图</p>
<p>任意<code>func</code>或<code>只读的计算属性</code>都可以标识为<code>@ViewBuilder</code>，一旦标识，它里面的内容将会被解析为<code>a list of Views</code></p>
<h2 id="零散的东西"><a href="#零散的东西" class="headerlink" title="零散的东西"></a>零散的东西</h2><p>函数式编程</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> faceUpCardIndices <span class="operator">=</span> cards.indices.filter(&#123; cards[<span class="variable">$0</span>].isFaceUp &#125;)</span><br><span class="line"><span class="comment">//cards.indices是0..&lt;cards.count filter返回一个满足条件的数组</span></span><br><span class="line"><span class="keyword">var</span> faceUpCardIndices <span class="operator">=</span> [<span class="type">Int</span>]()</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> cards.indices &#123;</span><br><span class="line">		<span class="keyword">if</span> cards[index].isFaceUp &#123;</span><br><span class="line">		faceUpCardIndices.append(index)</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>IOS</category>
      </categories>
      <tags>
        <tag>swift</tag>
        <tag>cs193p</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/12/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
